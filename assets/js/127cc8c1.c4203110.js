"use strict";(self.webpackChunkethberry_github_io=self.webpackChunkethberry_github_io||[]).push([[7341],{2702:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var r=n(74848),s=n(28453);const i={hide_table_of_contents:!0,sidebar_position:6},a="Contract actions",c={id:"hierarchy/contract-actions",title:"Contract actions",description:"Each contract deployed via the Contract Manager has",source:"@site/admin/hierarchy/contract-actions.md",sourceDirName:"hierarchy",slug:"/hierarchy/contract-actions",permalink:"/admin/hierarchy/contract-actions",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{hide_table_of_contents:!0,sidebar_position:6},sidebar:"defaultSidebar",previous:{title:"Features",permalink:"/admin/hierarchy/ERC1155/features"},next:{title:"Exchange",permalink:"/admin/category/exchange"}},o={},l=[];function h(e){const t={a:"a",h1:"h1",header:"header",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.RP)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"contract-actions",children:"Contract actions"})}),"\n",(0,r.jsxs)(t.p,{children:["Each contract deployed via the ",(0,r.jsx)(t.a,{href:"/admin/miscellaneous/contract-manager",children:"Contract Manager"})," has\naction menu with relevant blockchain actions."]}),"\n",(0,r.jsxs)(t.p,{children:["While some of these actions may depend on the specific ",(0,r.jsx)(t.a,{href:"/admin/hierarchy/ERC20/features",children:"features"})," of the contract,\nthere are several standard features that are available in all contracts from hierarchy section:"]}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Access Control:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Grant role"})," - Grants a specific role to a specified Ethereum address. (The caller must have Admin role)"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Revoke role"})," - Revokes a specific role from a specified Ethereum address. (The caller must have Admin role)"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Renounce role"})," - Removes a specific role from the Ethereum address that currently holds it. (The caller must have a Role that is being relinquished)"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Access List:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Add to blacklist"})," - Adds a specified Ethereum address to the blacklist. (Available only if contract have Blacklist feature)"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Remove from blacklist"})," - Removes a specified Ethereum address from the blacklist. (Available only if contract have Blacklist feature)"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Add to whitelist"})," - Adds a specified Ethereum address to the whitelist. (Available only if contract have Whitelist feature)"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Remove from whitelist"})," - Removes a specified Ethereum address from the whitelist. (Available only if contract have Whitelist feature)"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Misc:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Mint tokens"})," - Allows the contract owner to mint new tokens and add them to the supply."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Transfer"})," - Transfers tokens from one Ethereum address to another."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Allowance"})," - Approves a third-party address to spend a specified amount of tokens on behalf of the token owner."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Royalty"})," - Updates royalty contract-wise. (Only for ",(0,r.jsx)(t.a,{href:"/admin/category/erc721/",children:"ERC721"}),", ",(0,r.jsx)(t.a,{href:"/admin/category/erc998/",children:"ERC998"}),", ",(0,r.jsx)(t.a,{href:"/admin/category/erc1155/",children:"ERC1155"}),")"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Dev:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Add ETH listeners"})," - Enables the contract to listen for ETH deposits to the contract address. (Only for\ndevelopers)"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Remove ETH listeners"})," - Disables the ETH listener feature on the contract. (Only for developers)"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"hierarchy contract action menu",src:n(94697).A+"",width:"1728",height:"1000"})})]})}function d(e={}){const{wrapper:t}={...(0,s.RP)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},94697:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/contract_actions-937670305dd551866214822c3d3579c6.png"},28453:(e,t,n)=>{n.d(t,{RP:()=>i,xA:()=>c});var r=n(96540);const s=r.createContext({});function i(e){const t=r.useContext(s);return r.useMemo((()=>"function"==typeof e?e(t):{...t,...e}),[t,e])}const a={};function c({components:e,children:t,disableParentContext:n}){let c;return c=n?"function"==typeof e?e({}):e||a:i(e),r.createElement(s.Provider,{value:c},t)}}}]);